var figgo;
(function (figgo) {
    figgo.SLOW_CONNECTION_TIMEOUT = 6000;
    figgo.RESOURCE_TIMEOUT = 20000;
    figgo.CANCELLATION_TIMEOUT = 10000;
    figgo.STATES_APP_FIGGO = 'app-figgo';
    figgo.STATES_APP_FIGGO_SCHEDULE_MANAGEMENT = 'app-figgo.scheduleManagement';
    figgo.STATES_APP_FIGGO_SCHEDULE_MANAGEMENT_LEAVES_MANAGEMENT = 'app-figgo.scheduleManagement.leaves';
    figgo.STATES_APP_FIGGO_SCHEDULE_MANAGEMENT_DAYS_OFF_MANAGEMENT = 'app-figgo.scheduleManagement.daysOff';
    figgo.STATES_APP_FIGGO_LEAVESYNC = 'app-figgo.leave-sync';
    figgo.STATES_LEAVESYNC_SUBSCRIPTIONS = 'app-figgo.leave-sync.subscriptions';
    figgo.STATES_LEAVESYNC_SUBSCRIPTION_CONFIG = 'app-figgo.leave-sync.subscription-config';
    figgo.STATES_LEAVESYNC_ORPHANS = 'app-figgo.leave-sync.orphans';
    figgo.STATES_LEAVESYNC_SUBSCRIPTION_DASHBOARD = 'app-figgo.leave-sync.subscription-dashboard';
    figgo.STATES_LEAVESYNC_SUBSCRIPTION_EVENT = 'app-figgo.leave-sync.subscription-event';
    figgo.STATES_LEAVESYNC_SUBSCRIPTION_EVENT_DETAILS = 'app-figgo.leave-sync.subscription-event-details';
    var FiggoConfig = /** @class */ (function () {
        function FiggoConfig($stateProvider, $ocLazyLoadProvider, luisConfigProvider, //Lui.Service.IConfigProvider,
        $localForageProvider) {
            $ocLazyLoadProvider.config({
                debug: false,
                events: true
            });
            // let menuLoaded = true;
            var meLoaded = false;
            $stateProvider
                .state(figgo.STATES_APP_FIGGO, {
                abstract: true,
                template: '<div ui-view></div>',
                resolve: {
                    isConnected: [
                        '$q',
                        '$ocLazyLoad',
                        '$injector',
                        function ($q, $ocLazyLoad, $injector) {
                            var deferred = $q.defer();
                            if (meLoaded) {
                                deferred.resolve();
                                return deferred.promise;
                            }
                            $ocLazyLoad
                                .load({
                                name: 'figgo.common.services.api',
                                files: ['app/angular-js/api-1247c01afa.module-old.js?v=f430866dee6']
                            })
                                .then(function (result) {
                                $injector.invoke([
                                    '$translate',
                                    'moment',
                                    'tmhDynamicLocale',
                                    'figgo.common.services.api.UsersService',
                                    'figgo.common.services.api.AppInstancesService',
                                    function ($translate, moment, tmhDynamicLocale, UsersService, AppInstancesService) {
                                        UsersService.retrieveMe()
                                            .then(function (user) {
                                            $translate.use(user.culture.code);
                                            tmhDynamicLocale.set(user.culture.code.toLowerCase());
                                            moment.locale(user.culture.code);
                                            meLoaded = true;
                                        }, function () {
                                            deferred.reject({ code: 'NOT_AUTHENTICATED' });
                                        })
                                            .then(function () { return AppInstancesService.loadFiggoAppId(); })
                                            .then(function () { return deferred.resolve(); });
                                    }
                                ]);
                            });
                            return deferred.promise;
                        }
                    ]
                }
            })
                .state(figgo.STATES_APP_FIGGO_LEAVESYNC, {
                abstract: true,
                templateUrl: 'app/areas/leave-sync/angular-js/leave-sync-98c0de8dde.html',
                url: '/exports/leave-sync',
                controller: 'figgo.areas.leaveSync.LeaveSyncController as ctrl',
                resolve: {
                    controller: ['$ocLazyLoad', function ($ocLazyLoad) {
                            return $ocLazyLoad.load('app/areas/leave-sync/angular-js/leave-sync-83b3880c32.js?v=f430866dee6');
                        }]
                }
            })
                .state(figgo.STATES_LEAVESYNC_SUBSCRIPTIONS, {
                cache: false,
                url: '/'
            })
                .state(figgo.STATES_LEAVESYNC_SUBSCRIPTION_CONFIG, {
                cache: false,
                url: '/:subscriptionId/config',
                params: {
                    subscriptionId: {
                        value: null,
                        squash: true
                    }
                }
            })
                .state(figgo.STATES_LEAVESYNC_ORPHANS, {
                cache: false,
                url: '/orphans/:any',
                params: {
                    any: {
                        value: null,
                        squash: true
                    }
                }
            })
                .state(figgo.STATES_LEAVESYNC_SUBSCRIPTION_DASHBOARD, {
                cache: false,
                url: '/:subscriptionId/:eventStatus',
                params: {
                    eventStatus: {
                        value: null,
                        squash: true
                    },
                    subscriptionId: {
                        value: null,
                        squash: true
                    }
                },
                views: {
                    'content': {
                        templateUrl: 'app/areas/leave-sync/angular-js/components/subscription-dashboard/subscription-dashboard-a8aff5ef02.html',
                        controller: 'figgo.areas.leaveSync.components.subscriptionDashboard.SubscriptionDashboardController as ctrl',
                        resolve: {
                            homecontroller: ['$ocLazyLoad', function ($ocLazyLoad) {
                                    return $ocLazyLoad.load('app/areas/leave-sync/angular-js/components/subscription-dashboard/subscription-dashboard-e96bdc6d9a.js?v=f430866dee6');
                                }]
                        }
                    }
                }
            })
                .state(figgo.STATES_LEAVESYNC_SUBSCRIPTION_EVENT, {
                cache: false,
                url: '/:subscriptionId/events/:eventId',
                params: {
                    eventId: {
                        value: null,
                        squash: true
                    },
                    subscriptionId: {
                        value: null,
                        squash: true
                    }
                },
                views: {
                    'content': {
                        templateUrl: 'app/areas/leave-sync/angular-js/components/subscription-event/subscription-event-b5876dc40c.html',
                        controller: 'figgo.areas.leaveSync.components.subscriptionEvent.SubscriptionEventController as ctrl',
                        resolve: {
                            homecontroller: ['$ocLazyLoad', function ($ocLazyLoad) {
                                    return $ocLazyLoad.load('app/areas/leave-sync/angular-js/components/subscription-event/subscription-event-295a95cb5f.js?v=f430866dee6');
                                }]
                        }
                    }
                }
            })
                .state(figgo.STATES_LEAVESYNC_SUBSCRIPTION_EVENT_DETAILS, {
                cache: false,
                url: '/:subscriptionId/events/:eventId/details/:outputEventId',
                params: {
                    subscriptionId: {
                        value: null,
                        squash: true
                    },
                    eventId: {
                        value: null,
                        squash: true
                    },
                    outputEventId: {
                        value: null,
                        squash: true
                    }
                },
                views: {
                    'content': {
                        templateUrl: 'app/areas/leave-sync/angular-js/components/subscription-event-details/subscription-event-details-21b69ee348.html',
                        controller: 'figgo.areas.leaveSync.components.subscriptionEventDetails.SubscriptionEventDetailsController as ctrl',
                        resolve: {
                            homecontroller: ['$ocLazyLoad', function ($ocLazyLoad) {
                                    return $ocLazyLoad.load('app/areas/leave-sync/angular-js/components/subscription-event-details/subscription-event-details-22d3f0c0dc.js?v=f430866dee6');
                                }]
                        }
                    }
                }
            })
                .state(figgo.STATES_APP_FIGGO_SCHEDULE_MANAGEMENT, {
                templateUrl: 'app/areas/schedule-management/schedule-management-10e8aaca45.html',
                url: '/schedule-management',
                cache: false,
                controller: 'figgo.areas.scheduleManagement.ScheduleManagementController as ctrl',
                resolve: {
                    controller: ['$ocLazyLoad', function ($ocLazyLoad) {
                            return $ocLazyLoad.load('app/areas/schedule-management/schedule-management-2dc65d8017.js?v=f430866dee6');
                        }]
                }
            })
                .state(figgo.STATES_APP_FIGGO_SCHEDULE_MANAGEMENT_LEAVES_MANAGEMENT, {
                url: '/leaves/:userId?startsOn&endsOn&startsAM&endsAM',
                cache: false,
                params: {
                    userId: {
                        value: null,
                        squash: true
                    }
                },
                views: {
                    'content': {
                        templateUrl: 'app/areas/schedule-management/components/leaves/leaves-18aebef8a9.html',
                        controller: 'figgo.areas.scheduleManagement.components.leaves.LeavesManagementController as ctrl',
                        resolve: {
                            leavesManagementController: ['$ocLazyLoad', function ($ocLazyLoad) {
                                    return $ocLazyLoad.load('app/areas/schedule-management/components/leaves/leaves-b3bdd20e56.js?v=f430866dee6');
                                }]
                        }
                    }
                }
            })
                .state(figgo.STATES_APP_FIGGO_SCHEDULE_MANAGEMENT_DAYS_OFF_MANAGEMENT, {
                url: '/days-off/:userId',
                cache: false,
                params: {
                    userId: {
                        value: null,
                        squash: true
                    }
                },
                views: {
                    'content': {
                        templateUrl: 'app/areas/schedule-management/components/days-off/days-off-18aebef8a9.html',
                        controller: 'figgo.areas.scheduleManagement.components.daysOff.DaysOffManagementController as ctrl',
                        resolve: {
                            leavesManagementController: ['$ocLazyLoad', function ($ocLazyLoad) {
                                    return $ocLazyLoad.load('app/areas/schedule-management/components/days-off/days-off-a1dbf4e74b.js?v=f430866dee6');
                                }]
                        }
                    }
                }
            });
            // $urlRouterProvider
            // 	.otherwise('/admin/importBalance');
            luisConfigProvider.setConfig({
                parentTagIdClass: "figgoApp",
                startTop: 60,
                prefix: "lui",
                canDismissConfirm: true
            });
            $localForageProvider.config({
                name: 'figgo'
            });
        }
        FiggoConfig.$inject = [
            '$stateProvider',
            '$ocLazyLoadProvider',
            'luisConfigProvider',
            '$localForageProvider'
        ];
        return FiggoConfig;
    }());
    figgo.FiggoConfig = FiggoConfig;
})(figgo || (figgo = {}));
angular
    .module('figgo')
    .config(figgo.FiggoConfig);
